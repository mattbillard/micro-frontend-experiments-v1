
GOALS 
1) Golden Layout 
2) WebSocket updates 
3) Remote component 
4) OpenFin 




TODO 
- Micro front end 
  - Web component 
    - Fetch HTML, CSS, JS 
    - Try Shadow DOM 
  - Iframe 
    - Resize automatically 
- Proxy 
- GoldenLayout
  - Strip down demo 
  - Save/restore
  - Iframe component 
  - Separate widgets' CSS, JS 
  - Add to Simple SPA
  - React
  - Convert widgets to apps and iframe/fetch them 
  - Save/restore
- Settings menu 
- CSS - fit micro-apps to containers
- Fake login 
- Save/restore + websockets
  - Settings - save/restore
  - Settings - websockets
  - GoldenLayout - save/restore 
  - GoldenLayout - websockets
- GoldenLayout - way to add more window panes 
- Bugfix - fix pages 
- Bugfix - Micro-app is no longer working standalone 
- Propagate new props to mounted sub apps
- Bugfix - goldenLayout + web component is broken
- Bugfix - lazy component rerenders too often. Try only fetching when url changes 
- Bugfix - standalone Micro-app broken again
- Lazy-load - figure out how to load components from a URL
- Lots of small things 
  - Separate GoldenLayoutComponent vs MicroFrontendModeSwitch
  - Enum for modes 
  - Separate Lazy and Remote components 
  - React ShadowDOM npm package
  - CSS - clean up and use flexbox

  - Remove disableLiveReload
  - Lerna - don't use it for cross-linking packages 
  - Grid - fix when in ShadowDOM 
  - live-server 
  - Parcel vs Webpack 
  - Easy toggle dev vs serve dist
  - Move table of contents to container?
  - Definitions - micro-app, navigation 
  - Fix WS updates using a windowId 
- OpenFin / Electron
- Try other micro frontend approaches 
- More/Extras
  - Each app should save its own state 
  - More Features/framework - toasts, notifications, permissions, etc, etc, etc 
  - Middleware to send redux changes to WS?
  - Bugfix - GoldenLayout - consider removing Redux. Could make save/restore/reinit much simpler. Would need a way to listen to websocket without redux 
  - DefinitionsService - place to define featueres, their bootstrap script, menu items + their props, etc 
  - simulate dev - try using npm live-server for built code 
- More 
  - ShadowDOM browser tag?
  - Try lazy + shadowDOM 
- Bonus points 
  - Remote component - try even more approaches 

